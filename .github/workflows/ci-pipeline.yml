name: GitHub Actions Demo
run-name: ${{ github.actor }} is testing out GitHub Actions ðŸš€
on:
  push:
    branches:
      - practiceLecture #Trigger on push to the 'main' branch
  pull_request:
    branches:
      - main #Trigger on pull requests that target the 'main' branch

jobs:
  EditorConfig:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: echo "ðŸ’¡ The ${{ github.repository }} repository has been cloned to the runner."
      - uses: editorconfig-checker/action-editorconfig-checker@main
      - run: editorconfig-checker

  Pylintjob:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: echo "ðŸ’¡ The ${{ github.repository }} repository has been cloned to the runner."
      - uses: editorconfig-checker/action-editorconfig-checker@main
      - name: Setup python
        uses: actions/setup-python@v3
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Check the code with pylit
        run: |
          cd app && pylint -d C0114,C0115,C0116 $(git ls-files '*.py')

  Python-black:
    name: Python Black
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Python Black
        uses: psf/black@stable
        with:
          options: "--check --verbose"
          src: "./app"

  markdownlint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16"

      - name: Install markdownlint-cli
        run: npm install -g markdownlint-cli

      - name: Run markdownlint
        run: markdownlint README.md -c .markdownlint.json

  UnitTestSnyk:
    runs-on: ubuntu-latest
    steps:
      - run: echo "This is the unitTest for the python applicaiton"
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Setup python
        uses: actions/setup-python@v3
      - name: Install dependencies
        run: |
          pip3 install -r requirements.txt
      - name: Run the unit test
        run: python3 -m unittest discover -s app -p "*.py"
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/python@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  ScanTheCodeForSecret:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - uses: gitleaks/gitleaks-action@v2

  sonarcloud:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@v2.1.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_CLOUD_TOKEN }}
